{"version":3,"file":"static/js/463.b53bb93e.chunk.js","mappings":"iPAiGA,EAvFiB,WACb,IAAAA,GAA8DC,EAAAA,EAAAA,YAAWC,EAAAA,GAAjEC,EAAUH,EAAVG,WAAYC,EAAaJ,EAAbI,cAAeC,EAAWL,EAAXK,YAAaC,EAASN,EAATM,UACxCC,GAAWN,EAAAA,EAAAA,YAAWO,EAAAA,GAAtBD,OASP,IANJE,EAAAA,EAAAA,YAAU,WACW,IAAdN,GAAoBI,GAAUA,EAAOG,QACrCN,EAAcG,EAEtB,GAAG,CAACJ,EAAYI,IAERJ,GAAcA,EAAWQ,OAAO,CAGhC,IAAIC,EAAkBT,EAAWU,cAQvC,MAN4B,WAAnBD,EACEA,EAAkB,6EACK,WAAnBA,IACLA,EAAkB,+EAI1BE,EAAAA,EAAAA,KAAA,OAAKC,UAAU,sBAAsBC,MAAO,CAACC,WAAWL,GAAiBM,UACrEC,EAAAA,EAAAA,MAAA,OAAKJ,UAAWT,EAAY,qBAAuB,uBAAuBY,SAAA,EAEtEC,EAAAA,EAAAA,MAAA,OAAKJ,UAAU,mBAAkBG,SAAA,EAC/BJ,EAAAA,EAAAA,KAAA,QAAAI,UAAMJ,EAAAA,EAAAA,KAACM,EAAAA,IAAS,OACfD,EAAAA,EAAAA,MAAA,OAAKJ,UAAU,qBAAoBG,SAAA,EACjCJ,EAAAA,EAAAA,KAAA,OAAKC,UAAU,eAAcG,UAC5BJ,EAAAA,EAAAA,KAACO,EAAAA,cAAa,CACdC,IAAKnB,EAAWQ,OAAO,GAAGY,IAC1BC,eAAgBC,EAChBC,OAAO,OACPC,IAAI,aAGLR,EAAAA,EAAAA,MAAA,OAAKJ,UAAU,iBAAgBG,SAAA,EAC5BJ,EAAAA,EAAAA,KAAA,KAAAI,SAAIf,EAAWyB,QACfd,EAAAA,EAAAA,KAAA,MAAAI,SAAKf,EAAW0B,QAChBf,EAAAA,EAAAA,KAAA,KAAAI,SAAIf,EAAW2B,eACfX,EAAAA,EAAAA,MAAA,KAAAD,SAAA,CAAIf,EAAW4B,UAAUC,MAAM,eAAe7B,EAAWO,OAAOsB,MAAM,sBAM9Eb,EAAAA,EAAAA,MAAA,OAAKJ,UAAU,iBAAgBG,SAAA,EAC3BC,EAAAA,EAAAA,MAAA,OAAKJ,UAAU,uBAAsBG,SAAA,EACjCJ,EAAAA,EAAAA,KAAA,KAAAI,SAAG,eACHJ,EAAAA,EAAAA,KAAA,KAAAI,SAAG,aACHJ,EAAAA,EAAAA,KAAA,QAAAI,UAAMJ,EAAAA,EAAAA,KAACmB,EAAAA,IAAa,SAEvB9B,EAAWO,OAAOwB,MAAMC,KAAI,SAACC,GAE1B,IAAIC,EAAcD,EAAKE,MAAMC,YACvBC,EAAUC,KAAKC,MAAML,EAAc,KACnCM,EAAUF,KAAKG,OAAqB,IAAdP,GAAuB,KAC7CQ,EAAc,GAAAC,OAAKN,EAAO,KAAAM,OAAIH,EAAU,GAAK,IAAM,IAAEG,OAAGH,GAE9D,OACDxB,EAAAA,EAAAA,MAAA,OAAKJ,UAAU,4BAEfgC,QAAS,kBAAI1C,EAAY+B,EAAKE,MAAMU,IAAI,EAAC9B,SAAA,EACxCC,EAAAA,EAAAA,MAAA,QAAMJ,UAAU,WAAUG,SAAA,EAC1BJ,EAAAA,EAAAA,KAACO,EAAAA,cAAa,CACdC,IAAKc,EAAKE,MAAMW,MAAMtC,OAAO,GAAGY,IAChCC,eAAgBC,EAChBC,OAAO,OACPC,IAAI,WAEJb,EAAAA,EAAAA,KAAA,KAAAI,SAAIkB,EAAKE,MAAMW,MAAMpB,WAErBf,EAAAA,EAAAA,KAAA,QAAMC,UAAU,YAAWG,SAAEkB,EAAKE,MAAMY,QAAQ,GAAGrB,QACnDf,EAAAA,EAAAA,KAAA,QAAMC,UAAU,YAAWG,SAAE2B,MAZzBT,EAAKE,MAAMa,GAejB,WAOjB,CACD,C","sources":["Components/Playlist/Playlist.jsx"],"sourcesContent":["import \"./Playlist.css\"\r\nimport { useContext, useEffect } from \"react\"\r\nimport { SomeContexts } from \"../../Contexts/Context\"\r\nimport { LazyLoadImage } from \"react-lazy-load-image-component\"\r\nimport \"react-lazy-load-image-component/src/effects/blur.css\"\r\nimport spotyTiny from \"../../assets/spoty_tiny.jpg\"\r\nimport { BsSpotify } from 'react-icons/bs'\r\nimport { IoTimeOutline } from 'react-icons/io5'\r\nimport { ApiContext } from \"../../Contexts/ApiReq\"\r\n\r\nconst Playlist = () => {\r\n    const { playlistID, setPlaylistID, setTrackURI, arrowIcon } = useContext(SomeContexts)\r\n    const { album1 } = useContext(ApiContext)\r\n\r\n//default playlist \r\n useEffect(()=>{\r\n     if(playlistID == \"\" && album1 && album1.tracks){\r\n        setPlaylistID(album1)\r\n    }\r\n}, [playlistID, album1])\r\n   \r\n     if(playlistID && playlistID.images){\r\n        \r\n//changing background based on the playlist\r\n        let BackgroundColor = playlistID.primary_color\r\n\r\n        if(BackgroundColor == '#ffffff'){\r\n             BackgroundColor = 'linear-gradient(180deg, rgba(255, 255, 0, 1) 0%, rgba(255, 59, 0, 1) 100%)' \r\n        }else if(BackgroundColor == \"#FFFFFF\"){\r\n            BackgroundColor = 'linear-gradient(180deg, rgba(0, 255, 235, 1) 0%, rgba(7, 58, 187, 1) 100%)'\r\n        }\r\n\r\n  return (\r\n    <div className=\"playlist_background\" style={{background:BackgroundColor}}>\r\n        <div className={arrowIcon ? \"playlist_container\" : \"playlist_container_s\"}>\r\n\r\n            <div className=\"playlist_welcome\">\r\n              <span><BsSpotify/></span>\r\n               <div className=\"playlist_img_title\">\r\n                 <div className=\"playlist_img\">\r\n                  <LazyLoadImage \r\n                  src={playlistID.images[0].url}\r\n                  placeholderSrc={spotyTiny}\r\n                  effect=\"blur\"\r\n                  alt=\"music\"\r\n                  />\r\n                 </div>\r\n                 <div className=\"playlist_title\">\r\n                    <p>{playlistID.type}</p>\r\n                    <h1>{playlistID.name}</h1>\r\n                    <p>{playlistID.description}</p>\r\n                    <p>{playlistID.followers.total} likes &#xB7; {playlistID.tracks.total} songs</p>\r\n                    \r\n                 </div>\r\n               </div>\r\n            </div>\r\n\r\n            <div className=\"playlist_songs\">\r\n                <div className=\"playlist_songs_title\">\r\n                    <p>#   Title</p>\r\n                    <p>Artists</p>\r\n                    <span><IoTimeOutline/></span>\r\n                </div>\r\n                {playlistID.tracks.items.map((item)=> {\r\n                    //time logic\r\n                    let miliseconds = item.track.duration_ms\r\n                    const minutes = Math.floor(miliseconds / 60000)\r\n                    const seconds = Math.round((miliseconds & 60000) / 1000)\r\n                    const durationString =`${minutes}:${seconds < 10 ? '0' : ''}${seconds}`\r\n\r\n                    return (\r\n                   <div className=\"playlist_songs_containers\" \r\n                   key={item.track.id}\r\n                   onClick={()=>setTrackURI(item.track.uri)}>\r\n                    <span className=\"img_span\">\r\n                    <LazyLoadImage\r\n                    src={item.track.album.images[2].url}\r\n                    placeholderSrc={spotyTiny}\r\n                    effect=\"blur\"\r\n                    alt=\"music\"\r\n                    />\r\n                    <p>{item.track.album.name}</p>\r\n                    </span>\r\n                    <span className=\"name_span\">{item.track.artists[0].name}</span>\r\n                    <span className=\"time_span\">{durationString}</span>\r\n                </div>  \r\n                    )\r\n                  })\r\n                }\r\n               \r\n            </div>\r\n        </div>\r\n    </div>\r\n  )\r\n }\r\n}\r\n\r\nexport default Playlist"],"names":["_useContext","useContext","SomeContexts","playlistID","setPlaylistID","setTrackURI","arrowIcon","album1","ApiContext","useEffect","tracks","images","BackgroundColor","primary_color","_jsx","className","style","background","children","_jsxs","BsSpotify","LazyLoadImage","src","url","placeholderSrc","spotyTiny","effect","alt","type","name","description","followers","total","IoTimeOutline","items","map","item","miliseconds","track","duration_ms","minutes","Math","floor","seconds","round","durationString","concat","onClick","uri","album","artists","id"],"sourceRoot":""}